"use client";

import { AppWrapper } from "@/context";
import dynamic from "next/dynamic";
import "./globals.css";


const Sidebar = dynamic(() => import("./components/Sidebar"), {
  ssr: false,
});
const Header = dynamic(() => import("./components/Header"), {
  ssr: false,
});
// import Header from "./components/Header";

function LayoutContent({ children }: { children: React.ReactNode }) {


  return (
    <html>
      <body>
        <div className="flex h-full w-full bg-gray-100">
          {/* Sidebar uses context internally */}
          <Sidebar />

          {/* Main content */}
          <div className="flex flex-col flex-grow">
            <Header />
            {/* <HeaderDashboard toggleSidebar={toggleSidebar} /> */}
            <main className="p-2 sm:p-3 lg:p-6 !pt-16">{children}</main>
          </div>
        </div>
      </body>
    </html>
  );
}

export default function Layout({ children }: { children: React.ReactNode }) {
  return (
    <AppWrapper>
      <LayoutContent>{children}</LayoutContent>
    </AppWrapper>
  );
}

// // app/layout.tsx
// import Sidebar  from './components/Sidebar';
// import './globals.css';

// export default function RootLayout({ children }: { children: React.ReactNode }) {
//   return (
//     <html lang="en">
//       <body className="">
//         {/* <div className="flex h-screen">
//           <Sidebar />
//           <main className="flex-1 overflow-auto p-6">{children}</main>
//         </div> */}
//            <div className="flex h-full w-full bg-gray-100">
//       {/* Sidebar uses context internally */}
//       <Sidebar />

//       {/* Main content */}
//       <div className="flex flex-col flex-grow">
//         <HeaderDashboard toggleSidebar={toggleSidebar} />
//         <main className="p-2 sm:p-3 lg:p-6 !pt-16">{children}</main>
//       </div>
//     </div>
//       </body>
//     </html>
//   );
// }

// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }
